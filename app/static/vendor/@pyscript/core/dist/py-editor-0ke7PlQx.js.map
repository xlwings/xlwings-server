{"version":3,"file":"py-editor-0ke7PlQx.js","sources":["../src/plugins/py-editor.js"],"sourcesContent":["// PyScript py-editor plugin\nimport { Hook, XWorker, dedent, defineProperties } from \"polyscript/exports\";\nimport { TYPES, offline_interpreter, relative_url, stdlib } from \"../core.js\";\nimport { notify } from \"./error.js\";\nimport codemirror from \"./codemirror.js\";\n\nconst RUN_BUTTON = `<svg style=\"height:20px;width:20px;vertical-align:-.125em;transform-origin:center;overflow:visible;color:green\" viewBox=\"0 0 384 512\" aria-hidden=\"true\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"><g transform=\"translate(192 256)\" transform-origin=\"96 0\"><g transform=\"translate(0,0) scale(1,1)\"><path d=\"M361 215C375.3 223.8 384 239.3 384 256C384 272.7 375.3 288.2 361 296.1L73.03 472.1C58.21 482 39.66 482.4 24.52 473.9C9.377 465.4 0 449.4 0 432V80C0 62.64 9.377 46.63 24.52 38.13C39.66 29.64 58.21 29.99 73.03 39.04L361 215z\" fill=\"currentColor\" transform=\"translate(-192 -256)\"></path></g></g></svg>`;\n\nlet id = 0;\nconst getID = (type) => `${type}-editor-${id++}`;\n\nconst envs = new Map();\nconst configs = new Map();\n\nconst hooks = {\n    worker: {\n        codeBeforeRun: () => stdlib,\n        // works on both Pyodide and MicroPython\n        onReady: ({ runAsync, io }, { sync }) => {\n            io.stdout = io.buffered(sync.write);\n            io.stderr = io.buffered(sync.writeErr);\n            sync.revoke();\n            sync.runAsync = runAsync;\n        },\n    },\n};\n\nconst validate = (config, result) => {\n    if (typeof result === \"boolean\") throw `Invalid source: ${config}`;\n    return result;\n};\n\nasync function execute({ currentTarget }) {\n    const { env, pySrc, outDiv } = this;\n    const hasRunButton = !!currentTarget;\n\n    if (hasRunButton) {\n        currentTarget.disabled = true;\n        outDiv.innerHTML = \"\";\n    }\n\n    if (!envs.has(env)) {\n        const srcLink = URL.createObjectURL(new Blob([\"\"]));\n        const details = {\n            type: this.interpreter,\n            serviceWorker: this.serviceWorker,\n        };\n        const { config } = this;\n        if (config) {\n            // verify that config can be parsed and used\n            try {\n                details.configURL = relative_url(config);\n                if (config.endsWith(\".toml\")) {\n                    const [{ parse }, toml] = await Promise.all([\n                        import(\n                            /* webpackIgnore: true */ \"../3rd-party/toml.js\"\n                        ),\n                        fetch(config).then((r) => r.ok && r.text()),\n                    ]);\n                    details.config = parse(validate(config, toml));\n                } else if (config.endsWith(\".json\")) {\n                    const json = await fetch(config).then(\n                        (r) => r.ok && r.json(),\n                    );\n                    details.config = validate(config, json);\n                } else {\n                    details.configURL = relative_url(\"./config.txt\");\n                    details.config = JSON.parse(config);\n                }\n                details.version = offline_interpreter(details.config);\n            } catch (error) {\n                notify(error);\n                return;\n            }\n        } else {\n            details.config = {};\n        }\n\n        const xworker = XWorker.call(new Hook(null, hooks), srcLink, details);\n\n        // expose xworker like in terminal or other workers to allow\n        // creation and destruction of editors on the fly\n        if (hasRunButton) {\n            for (const type of TYPES.keys()) {\n                const editor = currentTarget.closest(`.${type}-editor-box`);\n                const script = editor?.parentNode?.previousElementSibling;\n                if (script) {\n                    defineProperties(script, { xworker: { value: xworker } });\n                    break;\n                }\n            }\n        }\n\n        const { sync } = xworker;\n        const { promise, resolve } = Promise.withResolvers();\n        envs.set(env, promise);\n        sync.revoke = () => {\n            URL.revokeObjectURL(srcLink);\n            resolve(xworker);\n        };\n    }\n\n    // wait for the env then set the target div\n    // before executing the current code\n    return envs.get(env).then((xworker) => {\n        xworker.onerror = ({ error }) => {\n            if (hasRunButton) {\n                outDiv.insertAdjacentHTML(\n                    \"beforeend\",\n                    `<span style='color:red'>${\n                        error.message || error\n                    }</span>\\n`,\n                );\n            }\n            console.error(error);\n        };\n\n        const enable = () => {\n            if (hasRunButton) currentTarget.disabled = false;\n        };\n        const { sync } = xworker;\n        sync.write = (str) => {\n            if (hasRunButton) outDiv.innerText += `${str}\\n`;\n            else console.log(str);\n        };\n        sync.writeErr = (str) => {\n            if (hasRunButton) {\n                outDiv.insertAdjacentHTML(\n                    \"beforeend\",\n                    `<span style='color:red'>${str}</span>\\n`,\n                );\n            } else {\n                notify(str);\n                console.error(str);\n            }\n        };\n        sync.runAsync(pySrc).then(enable, enable);\n    });\n}\n\nconst makeRunButton = (handler, type) => {\n    const runButton = document.createElement(\"button\");\n    runButton.className = `absolute ${type}-editor-run-button`;\n    runButton.innerHTML = RUN_BUTTON;\n    runButton.setAttribute(\"aria-label\", \"Python Script Run Button\");\n    runButton.addEventListener(\"click\", async (event) => {\n        runButton.blur();\n        await handler.handleEvent(event);\n    });\n    return runButton;\n};\n\nconst makeEditorDiv = (handler, type) => {\n    const editorDiv = document.createElement(\"div\");\n    editorDiv.className = `${type}-editor-input`;\n    editorDiv.setAttribute(\"aria-label\", \"Python Script Area\");\n\n    const runButton = makeRunButton(handler, type);\n    const editorShadowContainer = document.createElement(\"div\");\n\n    // avoid outer elements intercepting key events (reveal as example)\n    editorShadowContainer.addEventListener(\"keydown\", (event) => {\n        event.stopPropagation();\n    });\n\n    editorDiv.append(runButton, editorShadowContainer);\n\n    return editorDiv;\n};\n\nconst makeOutDiv = (type) => {\n    const outDiv = document.createElement(\"div\");\n    outDiv.className = `${type}-editor-output`;\n    outDiv.id = `${getID(type)}-output`;\n    return outDiv;\n};\n\nconst makeBoxDiv = (handler, type) => {\n    const boxDiv = document.createElement(\"div\");\n    boxDiv.className = `${type}-editor-box`;\n\n    const editorDiv = makeEditorDiv(handler, type);\n    const outDiv = makeOutDiv(type);\n    boxDiv.append(editorDiv, outDiv);\n\n    return [boxDiv, outDiv, editorDiv.querySelector(\"button\")];\n};\n\nconst init = async (script, type, interpreter) => {\n    const [\n        { basicSetup, EditorView },\n        { Compartment },\n        { python },\n        { indentUnit },\n        { keymap },\n        { defaultKeymap, indentWithTab },\n    ] = await Promise.all([\n        codemirror.core,\n        codemirror.state,\n        codemirror.python,\n        codemirror.language,\n        codemirror.view,\n        codemirror.commands,\n    ]);\n\n    let isSetup = script.hasAttribute(\"setup\");\n    const hasConfig = script.hasAttribute(\"config\");\n    const serviceWorker = script.getAttribute(\"service-worker\");\n    const env = `${interpreter}-${script.getAttribute(\"env\") || getID(type)}`;\n\n    // helps preventing too lazy ServiceWorker initialization on button run\n    if (serviceWorker) {\n        new XWorker(\"data:application/javascript,postMessage(0)\", {\n            type: \"dummy\",\n            serviceWorker,\n        }).onmessage = ({ target }) => target.terminate();\n    }\n\n    if (hasConfig && configs.has(env)) {\n        throw new SyntaxError(\n            configs.get(env)\n                ? `duplicated config for env: ${env}`\n                : `unable to add a config to the env: ${env}`,\n        );\n    }\n\n    configs.set(env, hasConfig);\n\n    let source = script.textContent;\n\n    // verify the src points to a valid file that can be parsed\n    const { src } = script;\n    if (src) {\n        try {\n            source = validate(\n                src,\n                await fetch(src).then((b) => b.ok && b.text()),\n            );\n        } catch (error) {\n            notify(error);\n            return;\n        }\n    }\n\n    const context = {\n        // allow the listener to be overridden at distance\n        handleEvent: execute,\n        serviceWorker,\n        interpreter,\n        env,\n        config: hasConfig && script.getAttribute(\"config\"),\n        get pySrc() {\n            return isSetup ? source : editor.state.doc.toString();\n        },\n        get outDiv() {\n            return isSetup ? null : outDiv;\n        },\n    };\n\n    let target;\n    defineProperties(script, {\n        target: { get: () => target },\n        handleEvent: {\n            get: () => context.handleEvent,\n            set: (callback) => {\n                // do not bother with logic if it was set back as its original handler\n                if (callback === execute) context.handleEvent = execute;\n                // in every other case be sure that if the listener override returned\n                // `false` nothing happens, otherwise keep doing what it always did\n                else {\n                    context.handleEvent = async (event) => {\n                        // trap the currentTarget ASAP (if any)\n                        // otherwise it gets lost asynchronously\n                        const { currentTarget } = event;\n                        // augment a code snapshot before invoking the override\n                        defineProperties(event, {\n                            code: { value: context.pySrc },\n                        });\n                        // avoid executing the default handler if the override returned `false`\n                        if ((await callback(event)) !== false)\n                            await execute.call(context, { currentTarget });\n                    };\n                }\n            },\n        },\n        code: {\n            get: () => context.pySrc,\n            set: (insert) => {\n                if (isSetup) return;\n                editor.update([\n                    editor.state.update({\n                        changes: {\n                            from: 0,\n                            to: editor.state.doc.length,\n                            insert,\n                        },\n                    }),\n                ]);\n            },\n        },\n        process: {\n            /**\n             * Simulate a setup node overriding the source to evaluate.\n             * @param {string} code the Python code to evaluate.\n             * @param {boolean} asRunButtonAction invoke the `Run` button handler.\n             * @returns {Promise<...>} fulfill once code has been evaluated.\n             */\n            value(code, asRunButtonAction = false) {\n                if (asRunButtonAction) return listener();\n                const wasSetup = isSetup;\n                const wasSource = source;\n                isSetup = true;\n                source = code;\n                const restore = () => {\n                    isSetup = wasSetup;\n                    source = wasSource;\n                };\n                return context\n                    .handleEvent({ currentTarget: null })\n                    .then(restore, restore);\n            },\n        },\n    });\n\n    const notifyEditor = () => {\n        const event = new Event(`${type}-editor`, { bubbles: true });\n        script.dispatchEvent(event);\n    };\n\n    if (isSetup) {\n        await context.handleEvent({ currentTarget: null });\n        notifyEditor();\n        return;\n    }\n\n    const selector = script.getAttribute(\"target\");\n\n    if (selector) {\n        target =\n            document.getElementById(selector) ||\n            document.querySelector(selector);\n        if (!target) throw new Error(`Unknown target ${selector}`);\n    } else {\n        target = document.createElement(`${type}-editor`);\n        target.style.display = \"block\";\n        script.after(target);\n    }\n\n    if (!target.id) target.id = getID(type);\n    if (!target.hasAttribute(\"exec-id\")) target.setAttribute(\"exec-id\", 0);\n    if (!target.hasAttribute(\"root\")) target.setAttribute(\"root\", target.id);\n\n    // @see https://github.com/JeffersGlass/mkdocs-pyscript/blob/main/mkdocs_pyscript/js/makeblocks.js\n    const [boxDiv, outDiv, runButton] = makeBoxDiv(context, type);\n    boxDiv.dataset.env = script.hasAttribute(\"env\") ? env : interpreter;\n\n    const inputChild = boxDiv.querySelector(`.${type}-editor-input > div`);\n    const parent = inputChild.attachShadow({ mode: \"open\" });\n    // avoid inheriting styles from the outer component\n    parent.innerHTML = `<style> :host { all: initial; }</style>`;\n\n    target.appendChild(boxDiv);\n\n    const doc = dedent(script.textContent).trim();\n\n    // preserve user indentation, if any\n    const indentation = /^([ \\t]+)/m.test(doc) ? RegExp.$1 : \"    \";\n\n    const listener = () => runButton.click();\n    const editor = new EditorView({\n        extensions: [\n            indentUnit.of(indentation),\n            new Compartment().of(python()),\n            keymap.of([\n                ...defaultKeymap,\n                { key: \"Ctrl-Enter\", run: listener, preventDefault: true },\n                { key: \"Cmd-Enter\", run: listener, preventDefault: true },\n                { key: \"Shift-Enter\", run: listener, preventDefault: true },\n                // @see https://codemirror.net/examples/tab/\n                indentWithTab,\n            ]),\n            basicSetup,\n        ],\n        foldGutter: true,\n        gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\n        parent,\n        doc,\n    });\n\n    editor.focus();\n    notifyEditor();\n};\n\n// avoid too greedy MutationObserver operations at distance\nlet timeout = 0;\n\n// avoid delayed initialization\nlet queue = Promise.resolve();\n\n// reset interval value then check for new scripts\nconst resetTimeout = () => {\n    timeout = 0;\n    pyEditor();\n};\n\n// triggered both ASAP on the living DOM and via MutationObserver later\nconst pyEditor = () => {\n    if (timeout) return;\n    timeout = setTimeout(resetTimeout, 250);\n    for (const [type, interpreter] of TYPES) {\n        const selector = `script[type=\"${type}-editor\"]`;\n        for (const script of document.querySelectorAll(selector)) {\n            // avoid any further bootstrap by changing the type as active\n            script.type += \"-active\";\n            // don't await in here or multiple calls might happen\n            // while the first script is being initialized\n            queue = queue.then(() => init(script, type, interpreter));\n        }\n    }\n    return queue;\n};\n\nnew MutationObserver(pyEditor).observe(document, {\n    childList: true,\n    subtree: true,\n});\n\n// try to check the current document ASAP\nexport default pyEditor();\n"],"names":["id","getID","type","envs","Map","configs","hooks","worker","codeBeforeRun","stdlib","onReady","runAsync","io","sync","stdout","buffered","write","stderr","writeErr","revoke","validate","config","result","async","execute","currentTarget","env","pySrc","outDiv","this","hasRunButton","disabled","innerHTML","has","srcLink","URL","createObjectURL","Blob","details","interpreter","serviceWorker","configURL","relative_url","endsWith","parse","toml","Promise","all","import","fetch","then","r","ok","text","json","JSON","version","offline_interpreter","error","notify","xworker","XWorker","call","Hook","TYPES","keys","editor","closest","script","parentNode","previousElementSibling","defineProperties","value","promise","resolve","withResolvers","set","revokeObjectURL","get","onerror","insertAdjacentHTML","message","console","enable","str","innerText","log","makeEditorDiv","handler","editorDiv","document","createElement","className","setAttribute","runButton","addEventListener","event","blur","handleEvent","makeRunButton","editorShadowContainer","stopPropagation","append","makeBoxDiv","boxDiv","makeOutDiv","querySelector","init","basicSetup","EditorView","Compartment","python","indentUnit","keymap","defaultKeymap","indentWithTab","codemirror","core","state","language","view","commands","isSetup","hasAttribute","hasConfig","getAttribute","onmessage","target","terminate","SyntaxError","source","textContent","src","b","context","doc","toString","callback","code","insert","update","changes","from","to","length","process","asRunButtonAction","listener","wasSetup","wasSource","restore","notifyEditor","Event","bubbles","dispatchEvent","selector","getElementById","Error","style","display","after","dataset","parent","attachShadow","mode","appendChild","dedent","trim","indentation","test","RegExp","$1","click","extensions","of","key","run","preventDefault","foldGutter","gutters","focus","timeout","queue","resetTimeout","pyEditor","setTimeout","querySelectorAll","MutationObserver","observe","childList","subtree","pyEditor$1"],"mappings":"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"}
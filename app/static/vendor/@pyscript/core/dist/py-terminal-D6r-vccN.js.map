{"version":3,"file":"py-terminal-D6r-vccN.js","sources":["../src/plugins/py-terminal.js"],"sourcesContent":["// PyScript py-terminal plugin\nimport { TYPES, relative_url } from \"../core.js\";\nimport { notify } from \"./error.js\";\nimport { customObserver } from \"polyscript/exports\";\n\n// will contain all valid selectors\nconst SELECTORS = [];\n\n// avoid processing same elements twice\nconst processed = new WeakSet();\n\n// show the error on main and\n// stops the module from keep executing\nconst notifyAndThrow = (message) => {\n    notify(message);\n    throw new Error(message);\n};\n\nconst onceOnMain = ({ attributes: { worker } }) => !worker;\n\nlet addStyle = true;\n\nfor (const type of TYPES.keys()) {\n    const selector = `script[type=\"${type}\"][terminal],${type}-script[terminal]`;\n    SELECTORS.push(selector);\n    customObserver.set(selector, async (element) => {\n        // we currently support only one terminal on main as in \"classic\"\n        const terminals = document.querySelectorAll(SELECTORS.join(\",\"));\n        if ([].filter.call(terminals, onceOnMain).length > 1)\n            notifyAndThrow(\"You can use at most 1 main terminal\");\n\n        // import styles lazily\n        if (addStyle) {\n            addStyle = false;\n            document.head.append(\n                Object.assign(document.createElement(\"link\"), {\n                    rel: \"stylesheet\",\n                    href: relative_url(\"./xterm.css\", import.meta.url),\n                }),\n            );\n        }\n\n        if (processed.has(element)) return;\n        processed.add(element);\n\n        const bootstrap = (module) => module.default(element);\n\n        // we can't be smart with template literals for the dynamic import\n        // or bundlers are incapable of producing multiple files around\n        if (type === \"mpy\") {\n            await import(/* webpackIgnore: true */ \"./py-terminal/mpy.js\").then(\n                bootstrap,\n            );\n        } else {\n            await import(/* webpackIgnore: true */ \"./py-terminal/py.js\").then(\n                bootstrap,\n            );\n        }\n    });\n}\n"],"names":["SELECTORS","processed","WeakSet","notifyAndThrow","message","notify","Error","onceOnMain","attributes","worker","addStyle","type","TYPES","keys","selector","push","customObserver","set","async","element","terminals","document","querySelectorAll","join","filter","call","length","head","append","Object","assign","createElement","rel","href","relative_url","url","has","add","bootstrap","module","default","import","then"],"mappings":"6FAMA,MAAMA,EAAY,GAGZC,EAAY,IAAIC,QAIhBC,EAAkBC,IAEpB,MADAC,EAAOD,GACD,IAAIE,MAAMF,EAAQ,EAGtBG,EAAa,EAAGC,YAAcC,cAAgBA,EAEpD,IAAIC,GAAW,EAEf,IAAK,MAAMC,KAAQC,EAAMC,OAAQ,CAC7B,MAAMC,EAAW,gBAAgBH,iBAAoBA,qBACrDX,EAAUe,KAAKD,GACfE,EAAeC,IAAIH,GAAUI,MAAOC,IAEhC,MAAMC,EAAYC,SAASC,iBAAiBtB,EAAUuB,KAAK,MAe3D,GAdI,GAAGC,OAAOC,KAAKL,EAAWb,GAAYmB,OAAS,GAC/CvB,EAAe,uCAGfO,IACAA,GAAW,EACXW,SAASM,KAAKC,OACVC,OAAOC,OAAOT,SAASU,cAAc,QAAS,CAC1CC,IAAK,aACLC,KAAMC,EAAa,0BAA2BC,SAKtDlC,EAAUmC,IAAIjB,GAAU,OAC5BlB,EAAUoC,IAAIlB,GAEd,MAAMmB,EAAaC,GAAWA,EAAOC,QAAQrB,GAIhC,QAATR,QACM8B,OAAiC,qBAAwBC,KAC3DJ,SAGEG,OAAiC,oBAAuBC,KAC1DJ,EAEhB,GAEA"}